(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[14],{"12da":function(e,s,n){e.exports=n.p+"media/Zeke_And_The_Popo__Floating_Brain.516537aa.ogg"},"3d85":function(e,s,n){e.exports=n.p+"media/Zeke_And_The_Popo__Floating_Brain.bbdf7158.mp3"},5245:function(e,s,n){"use strict";n.r(s);var t=function(){var e=this,s=e._self._c;return s("q-pull-to-refresh",{on:{refresh:e.refresh}},[s("div",[s("q-page",{attrs:{id:"zatpp_songpage"}},[s("q-img",{staticClass:"q-mb-none",attrs:{src:"/floating_brain.jpg"}}),s("div",{staticClass:"text-right q-pr-sm zatpp_floatingcover"},[e._v("photo by Gottfried Gneuss")]),s("div",{staticClass:"row q-px-md q-pt-lg",staticStyle:{"min-height":"700px"}},[s("div",{staticClass:"col"},[s("h5",{staticClass:"q-my-none text-center q-pb-none"},[e._v("\n          Floating Brain\n          "),s("span",{staticStyle:{"font-size":"15px"}},[e._v("/ New Song")])]),s("p",{staticClass:"text-center q-mx-md"},[e._v("\n          Composed by Zeke Khaseli/ Yosaviano Santoso\n          "),s("br"),e._v("Lyrics by Zeke Khaseli\n        ")]),s("div",{staticClass:"col"},[s("vue-plyr",{ref:"plyr",attrs:{id:"audioPlayer"}},[s("audio",{attrs:{loop:""}},[s("source",{attrs:{src:n("3d85"),type:"audio/mp3"}}),s("source",{attrs:{src:n("12da"),type:"audio/ogg"}})])])],1),s("div",{staticClass:"col q-my-lg"},[s("div",{staticClass:"q-py-none text-center"},[s("vue-particles",{staticClass:"zatpp_particles",attrs:{color:"#dedede",particleOpacity:.7,particlesNumber:10,shapeType:"circle",particleSize:4,linesColor:"#dedede",linesWidth:1,lineLinked:!0,lineOpacity:.4,linesDistance:150,moveSpeed:3,hoverEffect:!0,hoverMode:"grab",clickEffect:!0,clickMode:"push"}}),s("p",[e._v("\n              Floating brain\n              "),s("br"),e._v("You failed again\n              "),s("br"),e._v("You sweet for nothing\n              "),s("br"),e._v("Worms will eat you\n            ")]),s("p",[e._v("\n              Blue\n              "),s("br"),e._v("Cos I'm sad like you\n            ")]),s("p",[e._v("\n              In afterlife no thought I could be\n              "),s("br"),e._v("Cos in this life all thought I could have\n              "),s("br"),e._v("My morbid mood gets me to write a song\n              "),s("br"),e._v("The AI world forced me to get along\n            ")]),s("p",[e._v("\n              Floating brain\n              "),s("br"),e._v("You loose again\n              "),s("br"),e._v("You sweet for nothing\n              "),s("br"),e._v("Life will get you\n            ")]),s("p",[e._v("\n              Floating brain\n              "),s("br"),e._v("You failed again\n              "),s("br"),e._v("You lived for nothing\n            ")]),s("p",[e._v("\n              Life will win\n              "),s("br"),e._v("It will spit you to the ground\n              "),s("br"),e._v("And I will hunt you down\n              "),s("br"),e._v("Vengeance will be mine\n            ")])],1)]),s("div",{staticClass:"q-mb-lg"},[s("div",{staticClass:"flex flex-center zattp_download"},[s("a",{attrs:{href:"/audio/Zeke_And_The_Popo__Floating_Brain.mp3",download:"Zeke and The Popo - Floating Brain.mp3",target:"_blank"}},[e._v("\n              Listen Offline  \n              "),s("i",{staticClass:"fas fa-cloud-download-alt"})])])]),s("div",{staticClass:"text-center q-px-md q-mb-xl"},[s("p",[e._v("Dave Lumenta on Synthesizers, Mellotron, and Hammond Organ · Firzi O on Electric Guitars and Synthesizers · Iman Fattah on Programmed Samples · Leonardo Ringo on Drums · Mian Tiara on Vocals · Yosaviano Santoso on Electric/ Accoustic Guitars · Yuditia Noor on Bass · Zeke Khaseli on Vocals and Piano")])])])])],1)],1)])},l=[],o={components:{},methods:{refresh:function(e){setTimeout((function(){e()}),1e3)}},computed:{controls:function(){return this.fullview?'<div class="plyr__controls">\n              <button type="button" class="plyr__control" data-plyr="rewind">\n                  <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n                  <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n              </button>\n              <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n              </button>\n              <button type="button" class="plyr__control" data-plyr="fast-forward">\n                  <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n                  <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n              </button>\n              <div class="plyr__progress">\n                  <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n                  <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n                  <span role="tooltip" class="plyr__tooltip">00:00</span>\n              </div>\n              <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n              <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n              <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n              </button>\n              <div class="plyr__volume">\n                  <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n              </div>\n              <button type="button" class="plyr__control" data-plyr="captions">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-captions-on"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-captions-off"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Disable captions</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Enable captions</span>\n              </button>\n              <button type="button" class="plyr__control" data-plyr="fullscreen">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-exit-fullscreen"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-enter-fullscreen"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Exit fullscreen</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Enter fullscreen</span>\n              </button>\n          </div>\n          ':'\n        <div class="plyr__progress">\n                  <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n                  <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n                  <span role="tooltip" class="plyr__tooltip">00:00</span>\n              </div>\n              <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n              <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n        <div class="flex flex-center">\n        <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n              </button>\n\n              <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n                  <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                  <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                  <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                  <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n              </button>\n             </div>\n          '}}},a=o,r=(n("645d"),n("2877")),i=n("59d7"),p=n("9989"),c=n("068f"),u=n("eebe"),d=n.n(u),_=Object(r["a"])(a,t,l,!1,null,null,null);s["default"]=_.exports;d()(_,"components",{QPullToRefresh:i["a"],QPage:p["a"],QImg:c["a"]})},"645d":function(e,s,n){"use strict";n("c81b")},c81b:function(e,s,n){}}]);